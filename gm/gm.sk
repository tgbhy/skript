# ##################################
# Skript GM par tgbhy / Skript GM by tgbhy
# 
# 
# Le skript est complètement personnalisable dans les options / This skript is full customisable in options
# ##################################

options:
	# Logo personnalisable / Custom Logo
	Logo: &4{&6tgbhy's dev&4}
	
	# Permission personnalisable / Custom permissions
	gmPerm: gm.command
	gmcPerm: tgbhy.gm.command.creative
	gmaPerm: tgbhy.gm.command.adventure
	gmsPerm: tgbhy.gm.command.survival
	gmspPerm: tgbhy.gm.command.spectator
	gmOtherPerm: gm.command.other
	
# Messages personnalisable / Custom Messages
	
	# Réussites / Success
	gmChangeMe: &aVous avez changé votre mode de jeu pour %{_gamemode}%
	gmChangeOtherToPlayer: &aVous avez changé le mode de jeu de %arg 2% à été changé à %{_gamemode}% !
	gmChangeOtherToOther: &aLe joueur %{_staff}% a changé votre mode de jeu en %{_gamemode}% !
	
	# Affichage / Display
	# 							 true/false
	gmChangeMeDisplay: true
	gmChangeOtherToPlayerDisplay: true
	gmChangeOtherToOtherDisplay: true
	
	# Erreurs / Error 
	gmNotArgNotSet: &cVeuillez spécifier le mode de jeu !
	gmNoPermMessage: &cVous n'avez pas la permission d'éxécuter cette commande
	gmsNoPermMessage: &cVous n'avez pas la permission d'éxécuter cette commande
	gmcNoPermMessage: &cVous n'avez pas la permission d'éxécuter cette commande
	gmaNoPermMessage: &cVous n'avez pas la permission d'éxécuter cette commande
	gmspNoPermMessage: &cVous n'avez pas la permission d'éxécuter cette commande
	gmNotExistMessage: &cCe mode de jeu n'existe pas !
	gmPlayerDoesntExist: &7Erreur&f: &cCe joueur n'existe pas !
	gmModeNotExist: &7Erreur&f: &cCe mode de jeu n'existe pas !
	
	# Affichage / Display
	#						true/false
	gmNoPermMessageDisplay: true
	gmNotExistMessageDisplay: true
	gmPlayerDoesntExistDisplay: true
	gmModeNotExistDisplay: true
	
	# Syntaxe / Usage
	gmUsage: &cSyntaxe: /gm <gamemode> [<joueur>]
	gmcUsage: &cSyntaxe: /gmc [<joueur>]
	gmsUsage: &cSyntaxe: /gms [<joueur>]
	gmaUsage: &cSyntaxe: /gma [<joueur>]
	gmspUsage: &cSyntaxe: /gmsp [<joueur>]
	
	# Descriptions
	gmDescription: Cette commande permet de changer son mode de jeu ou le mode de jeu d'un autre joueur
	gmcDescription: Cette commande permet de changer son mode de jeu ou le mode de jeu d'un autre joueur en créatif
	gmsDescription: Cette commande permet de changer son mode de jeu ou le mode de jeu d'un autre joueur en survie
	gmaDescription: Cette commande permet de changer son mode de jeu ou le mode de jeu d'un autre joueur en aventure
	gmspDescription: Cette commande permet de changer son mode de jeu ou le mode de jeu d'un autre joueur en spectateur
	
	# Aliases des commandes principals / Aliases of principals commands
	gmAliases: /gamemode
	gmcAliases: /gamemodec
	gmaAliases: /gamemodea
	gmsAliases: /gamemodes
	gmspAliases: /gamemodesp
	
	# Afficher les messages (true/false) / Display messages (true/false)
	gmDisplayMessage: true
	gmcDisplayMessage: true
	gmsDisplayMessage: true
	gmaDisplayMessage: true
	gmspDisplayMessage: true
	
on load:
	set {_listSupportMode::*} to "survival" and "creative" and "spectator" and "adventure" and "s" and "c" and "sp" and "a"
	set {_listModeSurvival::*} to "survival" and "survie" and "s"
	set {_listModeCreative::*} to "creative" and "creatif" and "c"
	set {_listModeAdventure::*} to "adventure" and "aventure" and "a"
	set {_listModeSpectator::*} to "spectator" and "spectateur" and "s"

# ##################
# Fonction / Functions
# ##################

function tgbhy_gamemode_switch(player: player, staff: player, gamemode: text):
	if {_listSupportMode::*} contains {_gamemode}:
		set {_player}'s game mode to {_gamemode}
		if {_player} is {_staff}:
			tgbhy_gamemode_send({_player}, {_staff}, {_gamemode})
			stop
	else:
		send "{@Logo} {@gmModeNotExist}" to {_player} if {@gmModeNotExistDisplay} is true
	stop

function tgbhy_gamemode_send(player: player, staff: player, gamemode: text):
	if {@gmModeNotExistDisplay} is true:
		send "{@Logo} {@gmChangeMe}" to {_player}
	if {@gmChangeOtherToPlayerDisplay} is true:
		set {_msg} to {@gmChangeOtherToOtherDisplay}
		send "{@Logo} {_msg}" to {_player}
	if {@gmChangeOtherToOtherDisplay} is true:
		send "{@Logo} {@gmChangeOtherToOther}" to {_staff}
	stop
# #####################################
# Fin des fonctions / End of functions
# #####################################

# #####################
# Commandes / Commands
# #####################

command /gm [<text>] [<player>]:
    description: {@gmDescription}
    permission: {@gmPerm}
    permission message: {@gmNoPermMessage}
    usage: {@gmUsage}
    aliases: {@gmAliases}
    trigger:
        if arg 1 is not set:
            send "{@Logo} {@gmNotArgNotSet}" to player
            stop
        if arg 2 is set:
            if player has permission "{@gmOtherPerm}":
                if arg 2 doesn't exist:
                    send "{@Logo} {@gmPlayerDoesntExist}" to player if {@gmPlayerDoesntExistDisplay} is true
                    stop
            set {_player} to arg 2 
        set {_player} to player if {_player} is not set
		
        if {_listSupportMode::*} contains arg 1:
            tgbhy_gamemode_switch({_player}, player, arg 1)
            stop
        else:
            send "{@Logo} {@gmNotExistMessage}" to player if {@gmNotExistMessageDisplay} is true
            stop
		
command /gmc <player>:
    permission: {@gmcPerm}
    permission message: {@gmNoPermMessage}
    description: {@gmcDescription}
    usage: {@gmcUsage}
    aliases: {@gmcAliases}
    trigger:
        if arg 1 is set:
            if player has permission "{@gmOtherPerm}":
                if arg 1 doesn't exist:
                    send "{@gmPlayerDoesntExist}" to player if {@gmPlayerDoesntExistDisplay} is true
                    stop
                set {_player} to arg 1
        set {_player} to player if {_player} is not set
        tgbhy_gamemode_switch({_player}, player, "creative")
        stop
				
command /gma <player>:
    permission: {@gmaPerm}
    permission message: {@gmaNoPermMessage}
    description: {@gmaDescription}
    usage: {@gmaUsage}
    aliases: {@gmaAliases}
    trigger:
        if arg 1 is set:
            if player has permission "{@gmOtherPerm}":
                if arg 1 doesn't exist:
                    send "{@gmPlayerDoesntExist}" to player if {@gmPlayerDoesntExistDisplay} is true
                    stop
                set {_player} to arg 1
        set {_player} to player if {_player} is not set
        tgbhy_gamemode_switch({_player}, player, "adventure")
        stop

command /gms <player>:
    permission: {@gmsPerm}
    permission message: {@gmsNoPermMessage}
    description: {@gmsDescription}
    usage: {@gmsUsage}
    aliases: {@gmsAliases}
    trigger:
        if arg 1 is set:
            if player has permission "{@gmOtherPerm}":
                if arg 1 doesn't exist:
                    send "{@gmPlayerDoesntExist}" to player if {@gmPlayerDoesntExistDisplay} is true
                    stop
                set {_player} to arg 1
        set {_player} to player if {_player} is not set
        tgbhy_gamemode_switch({_player}, player, "survival")
        stop

command /gmsp <player>:
    permission: {@gmspPerm}
    permission message: {@gmspNoPermMessage}
    description: {@gmspDescription}
    usage: {@gmspUsage}
    aliases: {@gmspAliases}
    trigger:
        if arg 1 is set:
            if player has permission "{@gmOtherPerm}":
                if arg 1 doesn't exist:
                    send "{@gmPlayerDoesntExist}" to player if {@gmPlayerDoesntExistDisplay} is true
                    stop
                set {_player} to arg 1
        set {_player} to player if {_player} is not set
        tgbhy_gamemode_switch({_player}, player, "spectator")
        stop
		
# ####################################
# Fin des commandes / End of commands
# ####################################
